/* Bonne pratique : tout le CSS dans un fichier à part ! */

/* Style sur une balise */
h1 {
    color: rgb(255, 0, 0);
}

/* Style sur balise enfant d'une autre */
section h3 {
    color: blue;
}

/* Style sur une classe */
.en-vert {
    color: green;
}

/* Style sur un id */
#titre {
    color: purple;
}

/* Style d'un bouton (ou lien) */

/* Quand on change le style d'un bouton, on perd ses propriétés sépcifiques (au survol au clic...) */
.boutons button {
    font-size: 3rem;
    background-color: red;
    color: white;
    border: none;
    border-radius: 1rem;
    padding: 1rem 2rem;
}

/* Il faut les rajouter en utilisant les pseudo-sélecteurs */

/* au survol */
.boutons button:hover {
    background-color: darkred;
    cursor: pointer;
}

/* au survol si le bouton est desactivé */
.boutons button:is([disabled]), button[disabled] {   /* identiques ; aussi disponible avec :not */
    background-color: gray;
    cursor: not-allowed;
}

/* Paramètres d'image */
#mon-chien {
    height: 500px;
    width: 400px;
    /* cover = débordement ; contain = ajout de blanc */
    object-fit: cover;
    /* Filtres d'image */
    filter: grayscale();
    /* Propriétés de transitions */
    transition: all 2s;
}

#mon-chien:hover {
    filter: none;
    /* Transformations */
    transform: translate(50px) scale(0.95)
}

/* Flexbox */

/* Paramètres du parent */
.flexbox-container {
    height: 500px;
    background-color: aqua;
    /* Définir en tant que conteneur flex*/
    display: flex;
    /* Définir le sens de l'axe principal */
    flex-direction: row;
    /* Définir si les éléments vont à la ligne */
    flex-wrap: wrap;
    /* Définir l'espace entre les éléments enfants */
    gap : 5px;
    /* Définir la répartition des éléments sur l'axe principal */
    justify-content: space-evenly;
    /* Définir l'alignement sur l'axe secondaire */
    align-items: center;
}

/* Paramètre des enfants */
.flexbox {
    /* Permettre aux éléments de grandir prendre toute la place disponible */
    flex-grow: 1;
    /* Idem rétrécissement -> flex-shrink: 1; */
}

.flexbox:nth-child(3n) {
    background-color: red;
    /* flex-grow s'utilise en proportion des éléments les uns par rapport aux autres */
    flex-grow: 2;
}


.flexbox:nth-child(3n+1) {
    background-color: green;
    /* Changer l'alignement d'un élément */
    align-self: stretch;
}

.flexbox:nth-child(3n+2) {
    background-color: gray;
}

/* Autres paramètres des enfants */
.flexbox {
    padding: 20px;
    width: 100px;
    /* On peut faire des calculs en CSS :*/
    min-width: calc(15% - 5px);
    text-align: center;
}